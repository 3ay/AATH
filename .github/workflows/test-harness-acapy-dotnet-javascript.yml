name: test-harness-acapy-dotnet-javascript
# RUNSET_NAME: "ACA-PY to AF-.NET to AFJ"
# Scope: AIP 1.0
# Exceptions: Proof Proposals
#
# Summary
#
# This runset uses the current main branch of ACA-Py for the Acme agent. Bob (holder)
# uses the master branch of Aries Framework Javascript, and Faber (verifier) uses the 
# master branch of Aries Framework .NET. The runset covers all of the AIP 1.0 tests that 
# are known to work with the Aries Framework .NET as the holder and Aries Framework .NET as a verifier.
# Proof Proposals and Revocation are not included.
#
# Current
# 
# All tests are working, except for three tests that include Faber in the test run as an issuer.
# These tests are; T001-RFC0037@1.2, T001.2-RFC0037@1.2, T001.4-RFC0037@1.1 . Further investigation 
# is required to determine the issue in these three tests.
# 
# *Status Note Updated: 2021.03.18*
#
# End
on:
  workflow_dispatch:
defaults:
  run:
    shell: bash
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      LEDGER_URL_CONFIG: "http://localhost:9000"
      TAILS_SERVER_URL_CONFIG: "http://localhost:6543"
    steps:
      - name: checkout-test-harness
        uses: actions/checkout@v2
        with:
          path: test-harness
      - name: run-von-network
        uses: ./test-harness/actions/run-von-network
      - name: run-indy-tails-server
        uses: ./test-harness/actions/run-indy-tails-server
      - name: run-test-harness-wo-reports
        uses: ./test-harness/actions/run-test-harness-wo-reports
        with:
          BUILD_AGENTS: "-a acapy-main -a javascript -a dotnet"
          TEST_AGENTS: "-d acapy-main -b javascript -f dotnet"
          TEST_SCOPE: "-t @AcceptanceTest -t @AIP10 -t ~@wip -t ~@ProofProposal -t ~@RFC0025"
          REPORT_PROJECT: acapy-b-javascript-f-dotnet
        continue-on-error: true
      - name: run-send-gen-test-results-secure
        uses: ./test-harness/actions/run-send-gen-test-results-secure
        with:
          REPORT_PROJECT: acapy-b-javascript-f-dotnet 
          ADMIN_USER: ${{ secrets.AllureAdminUser }}
          ADMIN_PW: ${{ secrets.AllureAdminPW }}
